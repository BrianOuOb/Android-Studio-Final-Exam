package com.example.finalexam;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class ForthActivity extends AppCompatActivity implements View.OnClickListener, SensorEventListener {
    private SensorManager sm;
    private Sensor mSensorAccelerometer;
    private TextView ms_step;
    private Button btn_start;
    private int step = 0;
    private double oriValue = 0;
    private double lstValue = 0;
    private double curValue = 0;
    private boolean motiveState = true;
    private boolean processState = false;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_forth);
        sm = (SensorManager) getSystemService(SENSOR_SERVICE);
        mSensorAccelerometer = sm.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
        sm.registerListener(this, mSensorAccelerometer, SensorManager.SENSOR_DELAY_UI);

        ms_step = (TextView) findViewById(R.id.ms_step);
        btn_start = (Button) findViewById(R.id.btn_start);
        btn_start.setOnClickListener(this);
    }

    @Override
    public void onSensorChanged(SensorEvent event) {
        double range = 1;
        float[] value = event.values;
        curValue = magnitude(value[0], value[1], value[2]);
        if (motiveState == true) {
            if (curValue >= lstValue) lstValue = curValue;
            else {
                if (Math.abs(curValue - lstValue) > range) {
                    oriValue = curValue;
                    motiveState = false;
                }
            }
        }
        if (motiveState == false) {
            if (curValue <= lstValue) lstValue = curValue;
            else {
                if (Math.abs(curValue - lstValue) > range) {
                    oriValue = curValue;
                    if (processState == true) {
                        step++;
                        if (processState == true) {
                            ms_step.setText(step + "");
                        }
                    }
                    motiveState = true;
                }
            }
        }
    }

    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {}

    @Override
    public void onClick(View v) {

        step = 0;
        ms_step.setText("0");
        if (processState == true) {
            btn_start.setText("开始");
            processState = false;
        } else {
            btn_start.setText("停止");
            processState = true;
        }
    }
    public double magnitude(float x, float y, float z) {
        double magnitude = 0;
        magnitude = Math.sqrt(x * x + y * y + z * z);
        return magnitude;
    }
    @Override
    protected void onDestroy() {
        super.onDestroy();
        sm.unregisterListener(this);
    }
    public void button2_Click(View view){
        Intent intent = new Intent(this, ThirdActivity.class);
        startActivity(intent);
    }
    public void button3_Click(View view){
        Intent intent = new Intent(this, MainActivity.class);
        startActivity(intent);
    }
}
